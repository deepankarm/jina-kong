version: '3.9'

x-kong-config: &kong-env
  KONG_DATABASE: ${KONG_DATABASE:-postgres}
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_HOST: db
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password

volumes:
  kong_data: {}
  kong_prefix_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs
  kong_tmp_vol:
    driver_opts:
     type: tmpfs
     device: tmpfs

networks:
  kong-net:
    external: false

services:
  kong-migrations:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations bootstrap
    depends_on:
      - db
    environment:
      <<: *kong-env
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure

  kong-migrations-up:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations up && kong migrations finish
    depends_on:
      - db
    environment:
      <<: *kong-env
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure

  kong:
    image: "${KONG_DOCKER_TAG:-kong:jina}"
    user: "${KONG_USER:-kong}"
    environment:
      <<: *kong-env
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 http2 ssl, 0.0.0.0:9080 http2, 0.0.0.0:9081 http2 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_LOG_LEVEL: debug
      KONG_PLUGINS: bundled,jina-auth
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
      - 8002:8002
      - 8003:8003
      - 8004:8004
      - 8445:8445
      - 9080:9080 
      - 9081:9081
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./config:/opt/kong
    security_opt:
      - no-new-privileges

  db:
    image: postgres:9.5
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data

  flow-http:
    image: jinaai/jina:3.6.3-standard
    entrypoint: 
      /bin/sh -c "echo \"$$FLOW_YAML\" > /tmp/flow.yml; cat /tmp/flow.yml; jina flow --uses /tmp/flow.yml"
    networks:
      - kong-net
    environment:
      JINA_LOG_LEVEL: DEBUG
      FLOW_YAML: |
        jtype: Flow
        with:
          port: 12345
          protocol: http
        executors:
          - uses: jinahub://Sentencizer
            install_requirements: true

  flow-grpc:
    image: jinaai/jina:3.6.3-standard
    entrypoint: 
      /bin/sh -c "echo \"$$FLOW_YAML\" > /tmp/flow.yml; cat /tmp/flow.yml; jina flow --uses /tmp/flow.yml"
    networks:
      - kong-net
    environment:
      JINA_LOG_LEVEL: DEBUG
      FLOW_YAML: |
        jtype: Flow
        with:
          port: 23456
          protocol: grpc
        executors:
          - uses: jinahub://Sentencizer
            install_requirements: true
    
  flow-websocket:
    image: jinaai/jina:3.6.3-standard
    entrypoint: 
      /bin/sh -c "echo \"$$FLOW_YAML\" > /tmp/flow.yml; cat /tmp/flow.yml; jina flow --uses /tmp/flow.yml"
    networks:
      - kong-net
    environment:
      JINA_LOG_LEVEL: DEBUG
      FLOW_YAML: |
        jtype: Flow
        with:
          port: 34567
          protocol: websocket
        executors:
          - uses: jinahub://Sentencizer
            install_requirements: true
  
  executor0:
    image: jinaai/jina:3.6.4-standard
    entrypoint: jina executor --port 45678
    networks:
      - kong-net
    environment:
      JINA_LOG_LEVEL: DEBUG
    
secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD